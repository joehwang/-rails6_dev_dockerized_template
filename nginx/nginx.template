upstream green {server rails_app:3303;}

server {
  listen 80;
  ###listen 443 ssl http2;
  client_max_body_size 1G;
  server_name ${NGINX_HOST};
  if ($scheme = http) {
   return 301 https://$host$request_uri;
  }
  root /web_data/rails_app/public;
  try_files $uri/index.html $uri @rails;
  keepalive_timeout 10;

  ###ssl_certificate    /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
  ###ssl_certificate_key    /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;

  access_log /web_data/rails_app/log/nginx.access.log;
  error_log /web_data/rails_app/log/nginx.error.log;
  location /.well-known/acme-challenge {
    root /var/www/certbot;
  }
  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  location @rails {

    real_ip_header X-Forwarded-For;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://green;

   
  }

   location ~* \.(woff|ttf|svg|woff2)$ {
     expires 1M;
     access_log off;
     add_header "Access-Control-Allow-Origin" "*";
     add_header Cache-Control public;
   }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }


  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }
}

server {
        server_name www.${NGINX_HOST};
        return 301 $scheme://${NGINX_HOST}$request_uri;
}
